name: Bootstrap action for GCP project

on:
  pull_request:
    branches:
      - master
    paths:
      - '_init/*'

  push:
    branches:
      - master
    paths:
      - '_init/*'

jobs:
  bootstrap_infra:
    name: Bootstrap
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.15.5

      # This following action will need to be ported to
      # an internal repo or equivalent process
      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v1.1.0
        with:
          terragrunt_version: 0.29.10

      - name: Authenticate to GCP
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      # The following steps make sure that a distinction
      # is made between:
      #   - a successful plan with changes (job continues)
      #       (exitcode == 2)
      #   - a successful plan without changes (job continues)
      #       (exitcode == 0)
      #   - a failed plan (job stops)
      #       (exitcode == 1)
      # and that the pipeline stops only if plan fails!
      - name: Init _init resources
        id: init_init
        run: terraform -chdir=_init init

      - name: Validate _init resources
        id: validate_init
        run: terraform -chdir=_init validate

      - name: Plan _init resources
        id: plan_init
        run: |
          terraform -chdir=_init plan -detailed-exitcode
          echo "::set-output name=exitcode::$(echo $?)"
        continue-on-error: true

      - name: Fail if Plan _init failed
        if: steps.plan_init.outputs.exitcode == 1
        run: exit 1

      # The following steps will only run if plan succeeded
      # with changes and PR/MR was approved!
      # Read above comment for the explanation of conditionals.
      - name: Deploy _init resources
        id: deploy_init
        if: github.event_name == 'push' && steps.plan_init.outputs.exitcode == 2
        run: terraform -chdir=_init apply -auto-approve

      - name: Switch to remote tfstate
        id: switch_tfstate
        if: github.event_name == 'push' && steps.plan_init.outputs.exitcode == 2
        run: |
          cd _init/
          terragrunt init --terragrunt-non-interactive -force-copy
